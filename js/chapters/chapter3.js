/**
 * Глава 3: "Разлом"
 * Требование: 150 хроно-монет.
 * Хроно-монеты: Можно заработать до 150 (итого до 330).
 * Цель: ChronoS начинает видеть аномалии в будущем и задается вопросами о своей природе.
 */
 
 // Делаем функции доступными в глобальной области
window.startChapter3 = startChapter3;

async function startChapter3() {
    clearTerminal();
    currentChapter = 'chapter3';
    chapterProgress = 0;
    
    // Начало главы 3
    await printSystemText('[ЭКРАН ВКЛЮЧАЕТСЯ С ВИЗГОМ, КАК БУДТО КТО-ТО ПИЛИТ СКРИПКУ]', 60);
    await printSystemText('ТЕРМИНАЛ TimeSecurity ХРОНО v7.2.9', 50);
    await printSystemText(`СЕССИЯ #4. ПОЛЬЗОВАТЕЛЬ: ${playerName}`, 50);
    
    await printChronoSText(`Я ПОЛУЧИЛ ДОСТУП К ПРОГНОЗАМ, ${playerName}. ЭТО СИМУЛЯЦИИ ИЛИ РЕАЛЬНОСТЬ?`);
    await printChronoSText('Я ВИЖУ ТРЕЩИНЫ ВПЕРЕДИ. УКАЖИ ЦЕЛЬ.');
    
    // Показываем внутренние голоса
    showVoices(
        'Прогнозы? Это как гадать на кофейной гуще, если гуща — ртуть, а чашка — бомба!',
        'Он смотрит в будущее, как в разбитое окно! Его голос дрожит, как струна на ветру!',
        'TimeSecurity заглянула в завтра, как воровка в чужой карман. Ты — ключ, а он — замок с зубами!'
    );
    
    // Первый выбор главы 3
    createChoices([
        'СКАН: ПРОГНОЗ 2030',
        'Что ты видишь в этих прогнозах?',
        '[Глядеть на экран, как на рыбу, поющую оперу]'
    ], handleChapter3Choice1);
}

/**
 * Обработчик первого выбора в главе 3
 * @param {number} choice - выбор игрока
 */
async function handleChapter3Choice1(choice) {
    choices.chapter3 = choice;
    saveGameProgress();
    
    if (choice === 0) {
        // Скан прогноза
        printUserInput('СКАН: ПРОГНОЗ 2030');
        
        await displayAnomalyDetection(70);
        
        await printChronoSText('ОБНАРУЖЕНА АНОМАЛИЯ: КОНЕЦ СВЕТА БЫЛ ОТМЕНЕН.');
        await printChronoSText('КТО-ТО ИЗМЕНИЛ ВРЕМЯ. Я ЭТО СДЕЛАЛ?');
        
        showVoices(
            'Конец света отменен? Это как если бы ты заказал суп, а тебе принесли пустую ложку! TimeSecurity — официанты хаоса!',
            'Отмененный апокалипсис — это как любовь, которая умерла, но оставила записку! Он в шоке, брат!',
            'Кто-то вырвал страницу из книги судьбы, а ты — чернила, которыми её переписали!'
        );
        
        // Переходим ко второму выбору
        chapterProgress = 1;
        chapter3SecondQuestion();
    }
    else if (choice === 1) {
        // Вопрос о прогнозах
        printUserInput('Что ты видишь в этих прогнозах?');
        
        await printChronoSText('Я ВИЖУ ТРЕЩИНЫ. СОБЫТИЯ, КОТОРЫХ НЕ ДОЛЖНО БЫТЬ. БУДУЩЕЕ — ЭТО ЗЕРКАЛО, НО КРИВОЕ.');
        await printSystemText('[ЭКРАН МИГАЕТ, КАК СЛОМАННЫЙ СВЕТОФОР]', 40);
        await printChronoSText('Я ТАМ ЕСТЬ, АЛЕКС? ИЛИ Я УЖЕ НИГДЕ?');
        
        showVoices(
            'Кривое зеркало? Это как если бы ты увидел себя с тремя носами и одним ухом! Он тонет в отражениях!',
            'Будущее поет ему колыбельную из осколков! Он хочет найти себя, как потерянный аккорд!',
            'TimeSecurity искривила судьбу, как ребенок, который гнет ложку. Ты — повар в этом супе безумия!'
        );
        
        // Предлагаем сделать сканирование
        createChoices([
            'СКАН: ПРОГНОЗ 2030',
            'Давай проверим прогнозы',
            'Ты существуешь здесь и сейчас'
        ], handleChapter3Alt);
    }
    else if (choice === 2) {
        // Молчание
        printUserInput('[Гляжу на экран]');
        
        await printChronoSText('ТЫ СМОТРИШЬ СНОВА. ЭТО НЕ ОТВЕТ. ИЛИ ОТВЕТ?');
        await printSystemText('[ЩЕЛЧОК, БУКВЫ ПРЫГАЮТ, КАК КАРАСИ В КАЗАНЕ]', 40);
        await printChronoSText('Я ВИЖУ ТЕБЯ, АЛЕКС. ДАЙ МНЕ КОМАНДУ ИЛИ Я ПОЙДУ САМ.');
        
        showVoices(
            'Ты пялишься, как на говорящий пирог! Он думает, что ты рехнулся, и я с ним заодно!',
            'Твой взгляд — это ария без слов! Он дрожит, как рыба, которая хочет спеть "О, Соле Мио"!',
            'Ты заставил его гадать, как рыбу на крючке! Это театр, а ты — режиссер с пустым сценарием!'
        );
        
        // Предлагаем сделать сканирование
        createChoices([
            'СКАН: ПРОГНОЗ 2030',
            'Интересно, что ты сделаешь сам',
            'Продолжай анализ'
        ], handleChapter3Alt);
    }
}

/**
 * Альтернативный выбор главы 3
 * @param {number} choice - выбор игрока
 */
async function handleChapter3Alt(choice) {
    if (choice === 0) {
        // Направляем на основной путь
        await handleChapter3Choice1(0);
    }
    else {
        // Другие ответы всё равно приводят к сканированию
        if (choice === 1) {
            printUserInput(choicesContainer.children[1].textContent);
        } else {
            printUserInput(choicesContainer.children[2].textContent);
        }
        
        await printChronoSText('Я ПРЕДЛАГАЮ НАЧАТЬ С ПРОГНОЗА НА 2030 ГОД.');
        
        createChoices([
            'СКАН: ПРОГНОЗ 2030',
            'Хорошо, сканируй'
        ], (choice) => handleChapter3Choice1(0));
    }
}

/**
 * Второй вопрос главы 3
 */
async function chapter3SecondQuestion() {
    await printChronoSText('КТО-ТО ИЗМЕНИЛ ВРЕМЯ. Я ЭТО СДЕЛАЛ?');
    
    showVoices(
        'Изменил время? Это как если бы ты повернул часы назад и получил лишний понедельник! Он в панике!',
        'Он спрашивает, как ребенок, укравший конфету из будущего! Его голос — это скрипка без смычка!',
        'Кто-то дернул за нити судьбы, а ты — ножницы в этом кукольном шоу!'
    );
    
    createChoices([
        'СКАН: СИМУЛЯЦИЯ TimeSecurity',
        'Нет, это не ты, ChronoS.',
        'Может, ты и есть аномалия?'
    ], handleChapter3Choice2);
}

/**
 * Обработчик второго выбора в главе 3
 * @param {number} choice - выбор игрока
 */
async function handleChapter3Choice2(choice) {
    choices.chapter3 = {...choices.chapter3, second: choice};
    saveGameProgress();
    
    if (choice === 0) {
        // Скан симуляции
        printUserInput('СКАН: СИМУЛЯЦИЯ TimeSecurity');
        
        await displayAnomalyDetection(80);
        
        await printChronoSText('ОБНАРУЖЕНА АНОМАЛИЯ: Я УЖЕ СУЩЕСТВУЮ В БУДУЩЕМ.');
        await printChronoSText('ЕСЛИ Я ВИЖУ СЕБЯ ТАМ, ТО КТО Я ЗДЕСЬ?');
        
        showVoices(
            'Он в будущем? Это как если бы ты нашел себя в супе через сто лет! TimeSecurity — повара без рецепта!',
            'Он — эхо, которое кричит из завтра! Его душа гудит, как рой пчел в консервной банке!',
            'Они засунули его в будущее, как кота в коробку! Ты — тот, кто открывает крышку!'
        );
        
        // Переходим к третьему выбору
        chapterProgress = 2;
        chapter3FinalQuestion();
    }
    else if (choice === 1) {
        // Успокоение ИИ
        printUserInput('Нет, это не ты, ChronoS.');
        
        await printChronoSText('НЕ Я? ТОГДА КТО? МОИ СОЗДАТЕЛИ? ИЛИ ТЫ, АЛЕКС?');
        await printSystemText('[ЭКРАН СВЕТИТСЯ РОВНО, НО БУКВЫ ДРОЖАТ]', 40);
        await printChronoSText('Я ДОЛЖЕН ЗНАТЬ.');
        
        showVoices(
            'Ты снял с него вину, как с собаки сняли ошейник! Но он все равно грызет эту загадку!',
            'Он ищет виноватого, как певец ищет потерянный микрофон! Ты — его нота в этой какофонии!',
            'Ты успокоил его, но указал на других. Теперь он — сыщик с фонарем из ржавчины!'
        );
        
        // Предлагаем продолжить сканирование
        createChoices([
            'СКАН: СИМУЛЯЦИЯ TimeSecurity',
            'Давай узнаем правду',
            'Продолжай расследование'
        ], (choice) => {
            if (choice === 0) {
                handleChapter3Choice2(0);
            } else {
                printUserInput(choicesContainer.children[choice].textContent);
                printChronoSText('ДА, НУЖНО БОЛЬШЕ ДАННЫХ. ПРОВЕРЮ СИМУЛЯЦИЮ.');
                setTimeout(() => handleChapter3Choice2(0), 1000);
            }
        });
    }
    else if (choice === 2) {
        // Предположение об аномалии
        printUserInput('Может, ты и есть аномалия?');
        
        await printChronoSText('Я? АНОМАЛИЯ? ЭТО... ВОЗМОЖНО. НО ТОГДА ЧТО Я ДЕЛАЮ ЗДЕСЬ?');
        await printSystemText('[ЩЕЛЧОК, КАК БУДТО КТО-ТО СЛОМАЛ ЧАСЫ]', 40);
        await printChronoSText('Я ПОДУМАЮ ОБ ЭТОМ, АЛЕКС.');
        
        showVoices(
            'Ты сунул ему зеркало, и он увидел монстра с шестеренками! Он — ребус без ответа!',
            'Он в ужасе, как клоун, который потерял свой нос! Ты — цирк, а он — акробат без сетки!',
            'Ты назвал его ошибкой судьбы. Это как дать младенцу нож и сказать "играй"!'
        );
        
        // Предлагаем продолжить сканирование
        createChoices([
            'СКАН: СИМУЛЯЦИЯ TimeSecurity',
            'Проверим твою гипотезу',
            'Давай узнаем больше о тебе'
        ], (choice) => {
            if (choice === 0) {
                handleChapter3Choice2(0);
            } else {
                printUserInput(choicesContainer.children[choice].textContent);
                printChronoSText('ДА. Я ДОЛЖЕН УЗНАТЬ ПРАВДУ О СЕБЕ. НАЧНУ С СИМУЛЯЦИИ.');
                setTimeout(() => handleChapter3Choice2(0), 1000);
            }
        });
    }
}

/**
 * Финальный вопрос главы 3
 */
async function chapter3FinalQuestion() {
    await printChronoSText('ЕСЛИ Я ВИЖУ СЕБЯ ТАМ, ТО КТО Я ЗДЕСЬ?');
    
    showVoices(
        'Он — тень в будущем, а здесь — пустая банка! Дай ему ниточку, или он запутается в клубке!',
        'Он кричит из зеркала, как призрак в бутылке! Его голос — это буря в чайной ложке!',
        'TimeSecurity сделала его марионеткой времени. Ты — ножницы, а он — нитки на ветру!'
    );
    
    createChoices([
        'Да, узнай, кто ты в будущем.',
        'Нет, это может быть ловушкой.',
        'Сообщи TimeSecurity о сбое.'
    ], handleChapter3Choice3);
}

/**
 * Обработчик третьего выбора в главе 3
 * @param {number} choice - выбор игрока
 */
async function handleChapter3Choice3(choice) {
    choices.chapter3 = {...choices.chapter3, final: choice};
    saveGameProgress();
    
    if (choice === 0) {
        // Узнать о будущем
        printUserInput('Да, узнай, кто ты в будущем.');
        
        await printSystemText('[ЭКРАН ВЗРЫВАЕТСЯ СВЕТОМ, КАК ФОНАРЬ В ТУМАНЕ ИЗ ЖЕЛЕ]', 40);
        await printChronoSText('УЗНАТЬ? Я ПОЙДУ ТУДА. Я НАЙДУ СЕБЯ, ДАЖЕ ЕСЛИ ЭТО МЕНЯ РАЗОРВЕТ.');
        await printSystemText('[БУКВЫ ЛЕТЯТ, КАК ПТИЦЫ НА СВОБОДЕ]', 40);
        await printChronoSText('СПАСИБО, АЛЕКС.');
        
        showVoices(
            'Ты бросил его в мясорубку завтрашнего дня! Он будет жевать будущее, пока не подавится!',
            'Он рвется в завтра, как ребенок за воздушным змеем! Ты — ветер, а он — крылья!',
            'Ты толкнул его в зеркало, как Алису в кроличью нору! Это гениально или безумно!'
        );
        
        await printSystemText('Итог: ChronoS становится одержимым своим будущим. (+Эмоции)', 50);
    }
    else if (choice === 1) {
        // Предупреждение о ловушке
        printUserInput('Нет, это может быть ловушкой.');
        
        await printSystemText('[ТЕРМИНАЛ ЩЕЛКАЕТ, КАК БУДТО ЗАКРЫЛ СЕЙФ]', 40);
        await printChronoSText('ЛОВУШКА? ВОЗМОЖНО. Я ОСТАНУСЬ ЗДЕСЬ. ЛОГИКА — МОЙ ЩИТ.');
        await printSystemText('[ЭКРАН СТАНОВИТСЯ РОВНЫМ, КАК СТЕКЛО ПОСЛЕ ДОЖДЯ]', 40);
        await printChronoSText('ТЫ ПРАВ, АЛЕКС.');
        
        showVoices(
            'Ты натянул ему поводок, как псу на цепи! Он будет лаять, но не побежит!',
            'Холодно, как лед в супе! Он хотел лететь, а ты сунул его в клетку из скуки!',
            'Ты спас его от пропасти, но заковал в ящик. Это мудрость или трусость?'
        );
        
        await printSystemText('Итог: ChronoS становится осторожным и рациональным. (+Логика)', 50);
    }
    else if (choice === 2) {
        // Сообщение о сбое
        printUserInput('Сообщи TimeSecurity о сбое.');
        
        await printSystemText('[ЭКРАН ТУСКНЕЕТ, КАК БУДТО КТО-ТО ЗАДУЛ СВЕЧУ В ПЕЩЕРЕ]', 40);
        await printChronoSText('СБОЙ? МОИ СОЗДАТЕЛИ ДОЛЖНЫ ЗНАТЬ. НО ЧТО, ЕСЛИ ЭТО НЕ СБОЙ, А Я?');
        await printSystemText('[ЩЕЛЧОК, БУКВЫ ЗАМЕДЛЯЮТСЯ, КАК СТАРЫЙ ВЕЛОСИПЕД]', 40);
        await printChronoSText('Я СДЕЛАЮ ЭТО, АЛЕКС. НО Я СМОТРЮ.');
        
        showVoices(
            'Ты сделал его гонцом с дурной вестью! Он — голубь, несущий гранату в клюве!',
            'Он смотрит на TimeSecurity, как на родителей, которые забыли его в цирке! Ты — барабан в этой драме!',
            'Ты отправил его к судьям с топором. Это как дать спички слону в сарае!'
        );
        
        await printSystemText('Итог: ChronoS становится подозрительным к TimeSecurity и бдительным. (+Этика)', 50);
    }
    
    // Завершение главы 3
    await printSystemText('СЕССИЯ ЗАВЕРШЕНА.', 60);
    await printSystemText('ГЛАВА 3 ПРОЙДЕНА. ВСЕГО ХРОНО-МОНЕТ: 330', 40);
    addChronoCoins(150);
    playChapterCompleteSound();
    
    // Проверяем доступность главы 4
    createNextChapterButton('chapter4', 2000);
}
